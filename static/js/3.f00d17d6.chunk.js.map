{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogUser/DialogsUsers.jsx","components/Dialogs/DialogMessages/DialogsMessages.jsx","components/Dialogs/DialogsForm/DialogsForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","Selectors/dialogsSelectors.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogsUsers","id","name","path","to","DialogsMessages","message","maxLength30","maxLengthCreator","DialogsReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","component","Textarea","validate","required","Dialogs","users","messages","addMessage","dialogsElements","map","u","key","dialogsMessages","m","className","s","formData","messageArea","mapStateToPropsForRedirect","state","isAuth","auth","getUsersSel","createSelector","dialogsPage","e","getMessagesSel","getNewMessageTextSel","newMessageText","compose","connect","Component","props"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,gBAAkB,iCAAiC,aAAe,gC,+FCYrEC,EATM,SAAC,GAAgB,IAAfC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KACnBC,EAAO,YAAcF,EACzB,OACI,6BACI,kBAAC,IAAD,CAASG,GAAID,GAAOD,KCGjBG,EARS,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACtB,OACI,oCACI,6BAAMA,K,iCCDZC,EAAcC,YAAiB,IAaxBC,EAAmBC,YAAU,CAACC,KAAM,mBAAjBD,EAXZ,SAAC,GAAoB,IAAnBE,EAAkB,EAAlBA,aAClB,OACI,oCACI,0BAAMC,SAAUD,GACZ,kBAACE,EAAA,EAAD,CAAOC,UAAWC,IAAUd,KAAM,cAAgBe,SAAU,CAACC,IAAUX,KACvE,qDCiBDY,EAvBC,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,WAE3BC,EAAkBH,EAAMI,KAAI,SAACC,GAAD,OAAO,kBAAC,EAAD,CAAcvB,KAAMuB,EAAEvB,KAAMD,GAAIwB,EAAExB,GAAIyB,IAAKD,EAAExB,QAChF0B,EAAkBN,EAASG,KAAI,SAACI,GAAD,OAAO,kBAAC,EAAD,CAAiBtB,QAASsB,EAAEtB,QAASL,GAAI2B,EAAE3B,GACFyB,IAAKE,EAAE3B,QAM1F,OACI,oCACI,yBAAK4B,UAAWC,IAAE9B,cACbuB,GAEL,yBAAKM,UAAWC,IAAEzB,iBACbsB,GAEL,kBAAClB,EAAD,CAAkBI,SAZX,SAACkB,GACZT,EAAWS,EAASC,kB,gBCTxBC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,S,eCQVE,EAAcC,aAXF,SAACJ,GACtB,OAAOA,EAAMK,YAAYnB,SAU+B,SAACoB,GACzD,OAAOA,KAEEC,EAAiBH,aAXF,SAACJ,GACzB,OAAOA,EAAMK,YAAYlB,YAUqC,SAACmB,GAC/D,OAAOA,KAEEE,EAAuBJ,aAXF,SAACJ,GAC/B,OAAOA,EAAMK,YAAYI,kBAUiD,SAACH,GAC3E,OAAOA,KCLII,sBAAQC,aARD,SAACX,GACnB,MAAO,CACHd,MAAOiB,EAAYH,GACnBb,SAAUoB,EAAeP,GACzBS,eAAgBD,EAAqBR,MAIG,CAACZ,kBFPjB,SAACwB,GAO7B,OAFqCD,YAAQZ,EAARY,EAJb,SAACE,GACjB,OAAKA,EAAMZ,OACJ,kBAACW,EAAcC,GADI,kBAAC,IAAD,CAAU3C,GAAI,gBEKrCwC,CAAkEzB","file":"static/js/3.f00d17d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"DialogsMessages\":\"Dialogs_DialogsMessages__9AIEc\",\"DialogsUsers\":\"Dialogs_DialogsUsers__14lHU\"};","import React from \"react\"\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\n\r\nconst DialogsUsers = ({id, name}) => {\r\n    let path = \"/dialogs/\" + id;\r\n    return (\r\n        <div>\r\n            <NavLink to={path}>{name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogsUsers;\r\n","import React from \"react\"\r\n\r\n\r\nconst DialogsMessages = ({message}) => {\r\n    return (\r\n        <>\r\n            <div>{message}</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DialogsMessages;\r\n","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validatos\";\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst DialogsForm = ({handleSubmit}) => {\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <Field component={Textarea} name={\"messageArea\"}  validate={[required, maxLength30]}/>\r\n                <button>Send message</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const DialogsReduxForm = reduxForm({form: \"dialogsMessages\"})(DialogsForm);","import React from \"react\"\r\nimport s from \"./Dialogs.module.css\"\r\nimport DialogsUsers from \"./DialogUser/DialogsUsers\"\r\nimport DialogsMessages from \"./DialogMessages/DialogsMessages\"\r\nimport {DialogsReduxForm} from \"./DialogsForm/DialogsForm\";\r\n\r\nconst Dialogs = ({users, messages, addMessage}) => {\r\n\r\n    let dialogsElements = users.map((u) => <DialogsUsers name={u.name} id={u.id} key={u.id}/>)\r\n    let dialogsMessages = messages.map((m) => <DialogsMessages message={m.message} id={m.id}\r\n                                                                                       key={m.id}/>)\r\n\r\n    let onSubmit = (formData) => {\r\n        addMessage(formData.messageArea)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={s.DialogsUsers}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.DialogsMessages}>\r\n                {dialogsMessages}\r\n            </div>\r\n            <DialogsReduxForm onSubmit={onSubmit}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    let RedirectComponent = (props) => {\r\n            if (!props.isAuth) return <Redirect to={\"/login\"}/>;\r\n            return <Component {...props}/>\r\n    };\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.dialogsPage.users\r\n}\r\nconst getMessagesSelector = (state) => {\r\n    return state.dialogsPage.messages\r\n}\r\nconst getNewMessageTextSelector = (state) => {\r\n    return state.dialogsPage.newMessageText\r\n}\r\n\r\n\r\nexport const getUsersSel = createSelector(getUsersSelector, (e) => {\r\n    return e\r\n})\r\nexport const getMessagesSel = createSelector(getMessagesSelector, (e) => {\r\n    return e\r\n})\r\nexport const getNewMessageTextSel = createSelector(getNewMessageTextSelector, (e) => {\r\n    return e\r\n})\r\n\r\n","import {addMessage} from \"../../Redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getMessagesSel, getNewMessageTextSel, getUsersSel} from \"../../Selectors/dialogsSelectors\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSel(state),\r\n        messages: getMessagesSel(state),\r\n        newMessageText: getNewMessageTextSel(state),\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, {addMessage}), withAuthRedirect)(Dialogs);\r\n\r\n"],"sourceRoot":""}